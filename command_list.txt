   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
Last login: Thu Mar 23 15:02:02 2023 from 13.48.4.202
[ec2-user@ip-172-31-1-51 ~]$ 

sudo yum install git
sudo yum install flask
git clone https://github.com/MartinSvoren71/OPTappPowerline
ls
cd OPTappPowerline
sudo yum install python
python app2.py
yum install flask
sudo yum install flask
sudo yum install conda
sudo yum install anaconda
sudo yum install pip
pip install flask
pip install llama-index
sudo yum install httpd
sudo systemctl start httpd
cd templates
ls
index.html
sudo systemctl start httpd index.html
ls /mnt/myvolume
cd..
cd OPTappPowerline
python app2.py
sudo systemctl start httpd
sudo systemctl start myflaskapp.service
git clone https://github.com/MartinSvoren71/webtest
ls
cd OPTappPowerline
python app2.py
ls /mnt/myvolume
vi app2.py
git pull
git clone https://github.com/MartinSvoren71/OPTappPowerline
git clone --update https://github.com/MartinSvoren71/OPTappPowerline
pwd
cd OPTappPowerline/
git pull
git reset â€“hard
sudo systemctl stop httpd
sudo nano /etc/systemd/system/app2.service
sudo mv /etc/systemd/system/app2.servicem-d /etc/systemd/system/app2.service

sudo systemctl daemon-reload

StandardOutput=file:/home/ec2-user/bot/log/server_log.log
sudo systemctl enable app2.service
sudo systemctl start app2.service
sudo systemctl status app2.service
cd bot
python app2.py
vi mapn.py
vi main.py
git pull
git pull
python app2.py
vi ask_ai.py
vi ask_app2.py
ls
vi app2.py
cd bot
history 400
cd /etc/systemd/system/
ls
vi app2.service
sudo vi app2.service
sudo systemctl status app2.service
sudo systemctl start app2.service
systemctl daemon-reload
sudo systemctl daemon-reload
sudo systemctl restart app2.service
sudo systemctl stop app2.service
cd bot
sudo systemctl restart app2.service
git clone https://github.com/mozilla/pdf.js
cd pdf.js
sudo npm install
sudo yum install -y nodejs
sudo npm install --legacy-peer-deps
sudo npm run build:generic
sudo npm run build
sudo npm install -g gulp
gulp generic
cd /var/www/html
sudo rm -rf pdf.js
git clone https://github.com/mozilla/pdf.js.git
cd pdf.js
sudo chown -R ec2-user:ec2-user pdf.js
git checkout gh-pages
cd /var/www/html/pdf.js/build

 879  nano app2.service
  880  sudo nano app2.service
  883  sudo systemctl restart app2.service
  886  sudo systemctl daemon-reload
  888  cd /etc/systemd/system/
  
  
  If you need to write to a directory without using sudo, you can change the owner and group of the directory to your user.

Here's an example command that will change the owner and group of the /var/www/html directory to your user:

bash
Copy code
sudo chown -R $(whoami):$(whoami) /var/www/html
This will change the owner and group of the directory to your current user, which will allow you to write to it without using sudo.

Note that changing the ownership of system directories like /var/www/html can be risky, so proceed with caution and make sure you understand the implications before doing so.






To make the file accessible on AWS, you can place the file in the web server's document root directory. By default, the document root directory on Apache web server is /var/www/html/.

To do this, you can copy the file to the document root directory using the following command:

bash
Copy code
sudo cp /path/to/your/log.txt /var/www/html/data/
After copying the file to the document root directory, make sure the file permissions are set correctly so that the web server can access the file. You can set the file permissions to 644 using the following command:

bash
Copy code
sudo chmod 644 /var/www/html/data/log.txt
Finally, you should be able to access the file via the URL http://13.49.237.162/data/log.txt.